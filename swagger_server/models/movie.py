# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Movie(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: str=None, title: str=None, genre: str=None, release_date: date=None, rental_price: float=None):  # noqa: E501
        """Movie - a model defined in Swagger

        :param id: The id of this Movie.  # noqa: E501
        :type id: str
        :param title: The title of this Movie.  # noqa: E501
        :type title: str
        :param genre: The genre of this Movie.  # noqa: E501
        :type genre: str
        :param release_date: The release_date of this Movie.  # noqa: E501
        :type release_date: date
        :param rental_price: The rental_price of this Movie.  # noqa: E501
        :type rental_price: float
        """
        self.swagger_types = {
            'id': str,
            'title': str,
            'genre': str,
            'release_date': date,
            'rental_price': float
        }

        self.attribute_map = {
            'id': 'id',
            'title': 'title',
            'genre': 'genre',
            'release_date': 'releaseDate',
            'rental_price': 'rentalPrice'
        }
        self._id = id
        self._title = title
        self._genre = genre
        self._release_date = release_date
        self._rental_price = rental_price

    @classmethod
    def from_dict(cls, dikt) -> 'Movie':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Movie of this Movie.  # noqa: E501
        :rtype: Movie
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this Movie.

        Уникальный идентификатор фильма  # noqa: E501

        :return: The id of this Movie.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this Movie.

        Уникальный идентификатор фильма  # noqa: E501

        :param id: The id of this Movie.
        :type id: str
        """

        self._id = id

    @property
    def title(self) -> str:
        """Gets the title of this Movie.

        Название фильма  # noqa: E501

        :return: The title of this Movie.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title: str):
        """Sets the title of this Movie.

        Название фильма  # noqa: E501

        :param title: The title of this Movie.
        :type title: str
        """

        self._title = title

    @property
    def genre(self) -> str:
        """Gets the genre of this Movie.

        Жанр фильма  # noqa: E501

        :return: The genre of this Movie.
        :rtype: str
        """
        return self._genre

    @genre.setter
    def genre(self, genre: str):
        """Sets the genre of this Movie.

        Жанр фильма  # noqa: E501

        :param genre: The genre of this Movie.
        :type genre: str
        """

        self._genre = genre

    @property
    def release_date(self) -> date:
        """Gets the release_date of this Movie.

        Дата выхода фильма  # noqa: E501

        :return: The release_date of this Movie.
        :rtype: date
        """
        return self._release_date

    @release_date.setter
    def release_date(self, release_date: date):
        """Sets the release_date of this Movie.

        Дата выхода фильма  # noqa: E501

        :param release_date: The release_date of this Movie.
        :type release_date: date
        """

        self._release_date = release_date

    @property
    def rental_price(self) -> float:
        """Gets the rental_price of this Movie.

        Стоимость аренды фильма  # noqa: E501

        :return: The rental_price of this Movie.
        :rtype: float
        """
        return self._rental_price

    @rental_price.setter
    def rental_price(self, rental_price: float):
        """Sets the rental_price of this Movie.

        Стоимость аренды фильма  # noqa: E501

        :param rental_price: The rental_price of this Movie.
        :type rental_price: float
        """

        self._rental_price = rental_price
